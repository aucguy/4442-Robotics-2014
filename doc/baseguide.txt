This is a guide of how to use base.c

--concepts--
There is something called an Action, which is really a function.
You can start or stop an action. When an action is running, it gets called each tick.

--using
First you're going to want to include the header
	#include "base.h"

Next you'll want to implement the action function
	bool someAction(int time, SomeActionData data)
	{
		//do stuff
		return true;
	}
This should return whether or not to continue the function and takes the arguements
of the time the action started and the custom data defined below.

Also Add
	defActionData();
		/*add attributes here*/
		int count; //just an example
	endActionData(someActionData, SomeActionData);

Then add the following method to start an action
	void startSomeAction(/*whatever arguements are necessary*/ int count) //arg is just an example
	{
		//do something to initialize someActionStruct
		someActionData.count = count; //so it can be used later
		startAction(someActionData);
	}

Then add the following line to updateRobot() in base.c
	updateAction(someAction)

So it becomes...
	void updateRobot()
	{
		updateAction(someAction);
	}

To start an action call startSomeAction() with the required arguements.

That's all you need to do

--example--

This moves the robot forward.

defActionData();
	int dist; //distance robot must go forward in centimeters
	int orginalDist; //nMoterEncoder value at beggining of the action
endActionData(goData, GoData);

bool goUpdate(int time, goStruct data)
{
	/*moves the robot dist x centimeters forward*/
	if(nMotorEncoder[MOTOR_LEFT] > data.dist * THINGS_PER_CENTIMETER + data.orginalDist)
	{
		motor[MOTOR_LEFT] = 0;
		motor[MOTOR_RIGHT] = 0;
		return false;
	}
	else
	{
		return true;
	}
}

void startGo(int dist, int speed)
{
	/*starts to move the robot dist centimeters forward at speed speed*/
	if(!isActionExecuting(go))
	{
		motor[MOTOR_LEFT] = speed;
		motor[MOTER_RIGHT] = speed;
		goStruct.dist = dist;
		goStruct.orginalDist = nMotorEncoder[MOTOR_LEFT];
		startAction(goUpdate);
	}
}

//in base.c

void updateRobot()
{
	updateAction(goUpdate, goData);
}
